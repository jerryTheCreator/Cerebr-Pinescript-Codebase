//*************** GENERAL ***************//
// {
    
//FUNCTIONS
// {
htf(_res, _exp, gaps_on)  => gaps_on == 0 ? security(syminfo.tickerid, _res, _exp) :
  gaps_on == true ? security(syminfo.tickerid, _res, _exp, barmerge.gaps_on, barmerge.lookahead_off ) : 
  security(syminfo.tickerid, _res, _exp, barmerge.gaps_off, barmerge.lookahead_off )
  
barInZone(_top, _bott, _index) => _index == 0 ? (high <= _top and high >= _bott ) or 
  ( low <= _top and low >= _bott) or (high >= _top and low <= _bott) : 
  (high[_index] <= _top and high[_index] >= _bott ) or 
  ( low[_index] <= _top and low[_index] >= _bott) or (high[_index] >= _top and low[_index] <= _bott)
  
znInZone(_top, _bott, _top2, _bott2) => (_top2 <= _top and _top2 >= _bott ) or ( _bott2 <= _top and _bott2 >= _bott) or (_top2 >= _top and _bott2 <= _bott)

lineInZone(_top, _bott, _line) => (_line <= _top and _line >= _bott )

// }

//INPUT
// {
useMeth = input("Strategy 1", "Choose the Strategy", options=["Strategy 1", "Strategy 2"])
useStrict = input(false, "Use Strict Rules for Strategy 2")

optLen = input(6, "Binary Option Period", group="BINARY OPTIONS")
// }

// }

//*************** INDICATORS ***************//
// {


//***** Indicator *****//
// {

// }
// Signals ==> #, #


// }

//*************** OPTION SCANNER ***************//
//{

gain = bool(na)
loss = bool(na)

var countGain = 0

var countLoss = 0

if goLong[optLen + 1]
    if close[1] > open[optLen]
        gain := true
        countGain := countGain + 1
    else
        loss := true
        countLoss := countLoss + 1
    

if goShort[optLen + 1]
    if close[1] < open[optLen]
        gain := true
        countGain := countGain + 1
    else
        loss := true 
        countLoss := countLoss + 1

plotshape(gain, "Gain", shape.flag, location.top, color.lime, size = size.small)
plotshape(loss, "Loss", shape.flag, location.top, color.maroon, size = size.small)
plot(countGain, color=color.new(color.olive, 100))
plot(countLoss, color=color.new(color.purple, 100))

//}


//*************** PLOTS ***************//
// {

plot(na)

plotshape(goLong, "Long", shape.triangleup, location.belowbar, color.lime, size = size.small)
plotshape(goShort, "Short", shape.triangledown, location.abovebar, color.maroon, size = size.small)
// }