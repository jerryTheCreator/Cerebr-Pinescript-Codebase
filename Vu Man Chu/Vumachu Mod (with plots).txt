
//@version=4

study(title = 'VuManChu B Divergences', shorttitle = 'VMC Cipher_B_Divergences')

// PARAMETERS {

vmcUseHTF = input(false, "Use Higher Timeframe")
vmcRes = input("240", "Higher Timeframe", input.resolution)
useVMCObOS = input(false, "Use VMC Ob/Os? ")

// WaveTrend
wtShow = input(true, title = 'Show WaveTrend', type = input.bool)
wtBuyShow = input(true, title = 'Show Buy dots', type = input.bool)
wtSellShow = input(true, title = 'Show Sell dots', type = input.bool)
wtChannelLen = input(9, title = 'WT Channel Length', type = input.integer)
wtAverageLen = input(12, title = 'WT Average Length', type = input.integer)
wtMASource = input(hlc3, title = 'WT MA Source', type = input.source)
wtMALen = input(3, title = 'WT MA Length', type = input.integer)

// WaveTrend Overbought & Oversold lines
obLevel = input(53, title = 'WT Overbought Level 1', type = input.integer)
obLevel2 = input(60, title = 'WT Overbought Level 2', type = input.integer)
obLevel3 = input(100, title = 'WT Overbought Level 3', type = input.integer)
osLevel = input(-53, title = 'WT Oversold Level 1', type = input.integer)
osLevel2 = input(-60, title = 'WT Oversold Level 2', type = input.integer)
osLevel3 = input(-75, title = 'WT Oversold Level 3', type = input.integer)


// RSI+MFI
rsiMFIShow = input(true, title = 'Show MFI', type = input.bool)
rsiMFIperiod = input(60,title = 'MFI Period', type = input.integer)
rsiMFIMultiplier = input(150, title = 'MFI Area multiplier', type = input.float)
rsiMFIPosY = input(2.5, title = 'MFI Area Y Pos', type = input.float)


// COLORS {
colorRed = #ff0000
colorPurple = #e600e6
colorGreen = #3fff00
colorOrange = #e2a400
colorYellow = #ffe500
colorWhite = #ffffff
colorPink = #ff00f0
colorBluelight = #31c0ff

colorWT1 = #90caf9
colorWT2 = #0d47a1

colorWT2_ = #131722

colormacdWT1a = #4caf58
colormacdWT1b = #af4c4c
colormacdWT1c = #7ee57e
colormacdWT1d = #ff3535

colormacdWT2a = #305630
colormacdWT2b = #310101
colormacdWT2c = #132213
colormacdWT2d = #770000

//}

// } PARAMETERS

// FUNCTIONS {

 // RSI+MFI
f_rsimfi(_period, _multiplier, _tf) => security(syminfo.tickerid, _tf, sma(((close - open) / (high - low)) * _multiplier, _period) - rsiMFIPosY)  

 // WAVETREND
f_wavetrend(src, chlen, avg, malen, tf) =>
    tfsrc = security(syminfo.tickerid, tf, src)
    esa = ema(tfsrc, chlen)
    de = ema(abs(tfsrc - esa), chlen)
    ci = (tfsrc - esa) / (0.015 * de)
    wt1 = security(syminfo.tickerid, tf, ema(ci, avg))
    wt2 = security(syminfo.tickerid, tf, sma(wt1, malen))
    wtOversold = wt2 <= osLevel
    wtOverbought = wt2 >= obLevel
    wtCross = cross(wt1, wt2)
    wtCrossUp = wt2 - wt1 <= 0
    wtCrossDown = wt2 - wt1 >= 0
    wtCrosslast = cross(wt1[2], wt2[2])
    wtCrossUplast = wt2[2] - wt1[2] <= 0
    wtCrossDownlast = wt2[2] - wt1[2] >= 0
    [wt1, wt2, wtOversold, wtOverbought, wtCross, wtCrossUp, wtCrossDown, wtCrosslast, wtCrossUplast, wtCrossDownlast]
    
//Color Transparency User
clr(_clr, _transp) => color.new(_clr, _transp)
//}


// CALCULATION {

// RSI + MFI Area
rsiMFI = f_rsimfi(rsiMFIperiod, rsiMFIMultiplier, vmcUseHTF ? vmcRes : timeframe.period)
rsiMFIColor = rsiMFI > 0 ? #3ee145 : #ff3d2e

// Calculates WaveTrend
[wt1, wt2, wtOversold, wtOverbought, wtCross, wtCrossUp, wtCrossDown, wtCross_last, wtCrossUp_last, wtCrossDown_last] = 
  f_wavetrend(wtMASource, wtChannelLen, wtAverageLen, wtMALen, vmcUseHTF ? vmcRes : timeframe.period)

// Small Circles WT Cross
signalColor = wt2 - wt1 > 0 ? color.red : color.lime

//Vumanchu Signals
vmcMF = rsiMFI < 0 ? "Short" : "Long"								 
vmcLong = useVMCObOS ? wtCross and wtCrossUp and wtOversold and wt1 < 0 and wt2 < 0 : wtCross and wtCrossUp and wt1 < 0 and wt2 < 0 
vmcShort = useVMCObOS ? wtCross and wtCrossDown and wtOverbought and wt1 > 0 and wt2 > 0 : wtCross and wtCrossDown and wt1 > 0 and wt2 > 0


 
// } CALCULATE INDICATORS
//SIGNALS ==> vmcLong, vmcShort


// DRAW {
zLine = plot(0, color = color.new(colorWhite, 50))

//  MFI BAR
rsiMfiBarTopLine = plot(rsiMFIShow ? -95 : na, title = 'MFI Bar TOP Line', display=display.none)
rsiMfiBarBottomLine = plot(rsiMFIShow ? -99 : na, title = 'MFI Bar BOTTOM Line', display=display.none)
fill(rsiMfiBarTopLine, rsiMfiBarBottomLine, title = 'MFI Bar Colors', color = clr(rsiMFIColor, 75))

// WT Areas
plot(wtShow ? wt1 : na, style = plot.style_area, title = 'WT Wave 1', color = clr(colorWT1, 0))
  
plot(wtShow ? wt2 : na, style = plot.style_area, title = 'WT Wave 2', color = clr(colorWT2, 0))

// MFI AREA
rsiMFIplot = plot(rsiMFIShow ? rsiMFI: na, title = 'RSI+MFI Area', color = clr(rsiMFIColor, 40))
fill(rsiMFIplot, zLine, rsiMFIColor)

// Draw Overbought & Oversold lines
plot(obLevel2, title = 'Over Bought Level 2', color = clr(colorWhite, 85), linewidth = 1, style = plot.style_stepline)
plot(obLevel3, title = 'Over Bought Level 3', color = clr(colorWhite, 95), linewidth = 1, style = plot.style_circles)

plot(osLevel2, title = 'Over Sold Level 2', color = clr(colorWhite, 85), linewidth = 1, style = plot.style_stepline)

// Circles
plot(wtCross ? wt2 : na, title = 'Buy and sell circle', color = clr(signalColor, 15), style = plot.style_circles, linewidth = 3)

plotchar(wtBuyShow and vmcLong ? -107 : na, title = 'Buy circle', char='·', color = clr(colorGreen, 50), location = location.absolute, size = size.small)
plotchar(wtSellShow and vmcShort ? 105 : na , title = 'Sell circle', char='·', color = clr(colorRed, 50), location = location.absolute, size = size.small)

// } DRAW
// ALERTS {
  
// BUY
alertcondition(vmcLong, 'Buy (Big green circle)', 'Green circle WaveTrend Oversold')
alertcondition(wtCross and wtCrossUp, 'Buy (Small green dot)', 'Buy small circle')

// SELL

alertcondition(vmcShort, 'Sell (Big red circle)', 'Red Circle WaveTrend Overbought')
alertcondition(wtCross and wtCrossDown, 'Sell (Small red dot)', 'Sell small circle')

// } ALERTS